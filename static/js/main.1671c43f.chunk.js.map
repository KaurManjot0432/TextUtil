{"version":3,"sources":["logo.svg","components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleState","class","for","Textform","useState","text","setText","style","backgroundColor","color","heading","value","onChange","event","target","rows","uppercaseText","toUpperCase","showAlert","toLowerCase","copyText","document","getElementById","select","navigator","clipboard","writeText","newText","split","join","length","charAt","Alert","alert","role","msg","defaultProps","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1671c43f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import PropTypes from 'prop-types';\nimport React from 'react';\n// import { Link } from 'react-router-dom';\n\nexport default function Navbar(props) {\n  return (\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n            </li>\n            {/* <li className=\"nav-item\"> */}\n              {/* <Link className=\"nav-link\" to=\"/about\">About</Link> */}\n            {/* </li> */}\n\n\n          </ul>\n          {/* <form className=\"d-flex\">\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n              <button className=\"btn btn-primary\" type=\"submit\">Search</button>\n            </form> */}\n          <div className={`form-check form-switch text-${props.mode=='light'?'dark':'light'}`}>\n            <input className=\"form-check-input\" onClick={props.toggleState} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\n            <label class =\"form-check-label\" for=\"flexSwitchCheckDefault\">{`Enable ${props.mode=='light'?'dark':'light'} Mode`}</label>\n          </div>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nNavbar.propTypes = {\n  title: PropTypes.string\n}\n\n// Specifies the default values for props:\nNavbar.defaultProps = {\n  title: 'MyApp'\n};\n\n","import React, { useState } from 'react';\n\nexport default function Textform(props) {\n    const [text, setText] = useState(\"\");\n    // text = \"sdkafafaj\"//wrong way to change the state\n    // setText(\"sfdagsd\");//right wat to change the state\n    const handleUPClick = ()=>{\n        let uppercaseText = text.toUpperCase();\n        setText(uppercaseText);\n        props.showAlert(\"Converted to Uppercase!\",\"success\");\n    }\n    const handleLCClick = ()=>{\n        let uppercaseText = text.toLowerCase();\n        setText(uppercaseText);\n        props.showAlert(\"Converted to Lowercase!\",\"success\");\n    }\n    const handleOnChange = (event)=>{\n        setText(event.target.value);\n    }\n    const handleClearClick = ()=>{\n        setText('');\n        props.showAlert(\"Text is cleared!\",\"success\");\n    }\n    const handleCopyClick = ()=>{\n        let copyText = document.getElementById(\"mybox\");\n        copyText.select();\n        navigator.clipboard.writeText(copyText.value);\n        props.showAlert(\"Copied to Clipboard!\",\"success\");\n    }\n    const handleSpacesClick = ()=>{\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"));\n        props.showAlert(\"Removed extra spaces!\",\"success\");\n    }\n    return (\n        <>\n        <div className=\"container\"  style={{backgroundColor:(props.mode==='light'?'white':'#042743'), color : (props.mode==='light'?'#042743':'white')}}>\n            <h2>{props.heading}</h2>\n            <div className=\"mb-3\">\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"mybox\" rows=\"8\"  style={{backgroundColor:(props.mode==='light'?'white':'#042743'), color : (props.mode==='light'?'#042743':'white')}}></textarea>\n            </div>\n                <button className=\"btn btn-primary mx-1\" onClick={handleUPClick}>Convert to UpperCase</button>\n            <button className=\"btn btn-primary mx-1\" onClick={handleLCClick}>Convert to LowerCase</button>\n            <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear text</button>\n            <button className=\"btn btn-primary mx-1\" onClick={handleCopyClick}>Copy text</button>\n            <button className=\"btn btn-primary mx-1\" onClick={handleSpacesClick}>Remove extra spaces</button>\n        </div>\n        <div className=\"container my-4\" style={{color : (props.mode==='light'?'#042743':'white')}}>\n            <h2>Your Text Summary</h2>\n            <p>{text.length==0 || text.charAt(text.length-1)==' '?text.split(\" \").length-1: text.split(\" \").length} words and {text.length} characters</p>\n            <p>{0.008 * text.split(\" \").length} min read</p>\n            <h3>Preview</h3>\n            <p>{text.length>0?text:\"Enter your text into textbox to preview it here!    \"}</p>\n            </div>\n        </>\n    )\n}\n","import React from 'react'\n\nexport default function Alert(props) {\n    return (\n        props.alert &&\n        <div>\n          <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n                <strong>{props.alert.type}</strong> {props.alert.msg}\n            </div>\n        </div>\n    )\n}\n","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport About from './components/About';\nimport react, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleState = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode is enabled\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode is enabled\", \"success\");\n    }\n  }\n\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar title=\"TextUtil\" mode={mode} toggleState={toggleState} />\n      <Alert alert={alert} />\n      {/* <Switch> */}\n        {/* <Route exact path=\"/about\"> */}\n          {/* <About /> */}\n        {/* </Route> */}\n        {/* <Route exact path=\"/\"> */}\n          <div class=\"container my-3\">\n            <Textform heading=\"Enter your text\" mode={mode} showAlert={showAlert} />\n          </div>\n        {/* </Route> */}\n      {/* </Switch> */}\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}